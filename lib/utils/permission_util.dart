import 'package:flutter/material.dart';
import 'package:photo_manager/photo_manager.dart';
import 'package:permission_handler/permission_handler.dart';
import 'package:relo/utils/show_notification.dart';
import 'dart:io';

class PermissionUtils {
  /// üì∏ Ki·ªÉm tra & xin quy·ªÅn truy c·∫≠p ·∫£nh/video
  static Future<bool> ensurePhotoPermission(BuildContext context) async {
    try {
      final permitted = await PhotoManager.requestPermissionExtend();

      if (!permitted.isAuth) {
        final openSettings = await ShowNotification.showCustomAlertDialog(
          context,
          message: "·ª®ng d·ª•ng c·∫ßn quy·ªÅn truy c·∫≠p ·∫£nh v√† video ƒë·ªÉ g·ª≠i t·ªáp",
          buttonText: "M·ªü c√†i ƒë·∫∑t",
          buttonColor: const Color(0xFF7A2FC0),
        );

        if (openSettings == true) {
          await PhotoManager.openSetting();
          // Kh√¥ng delay, ch·ªù user quay l·∫°i r·ªìi check l·∫°i quy·ªÅn
          return false;
        } else {
          return false;
        }
      }

      return true;
    } catch (e) {
      debugPrint("‚ö†Ô∏è L·ªói khi ki·ªÉm tra quy·ªÅn ·∫£nh/video: $e");
      return false;
    }
  }

  /// üéô Ki·ªÉm tra & xin quy·ªÅn micro ƒë·ªÉ ghi √¢m
  static Future<bool> ensureMicroPermission(BuildContext context) async {
    try {
      final micStatus = await Permission.microphone.request();

      if (!micStatus.isGranted) {
        final openSettings = await ShowNotification.showCustomAlertDialog(
          context,
          message: "·ª®ng d·ª•ng c·∫ßn quy·ªÅn truy c·∫≠p micro ƒë·ªÉ ghi √¢m",
          buttonText: "M·ªü c√†i ƒë·∫∑t",
          buttonColor: const Color(0xFF7A2FC0),
        );

        if (openSettings == true) {
          await openAppSettings();
          await Future.delayed(const Duration(seconds: 1));

          final micAfter = await Permission.microphone.status;
          if (!micAfter.isGranted) {
            if (context.mounted) {
              await ShowNotification.showCustomAlertDialog(
                context,
                message: "V·∫´n ch∆∞a c√≥ quy·ªÅn micro, kh√¥ng th·ªÉ ghi √¢m.",
              );
              Navigator.pop(context);
            }
            return false;
          }
        } else {
          if (context.mounted) Navigator.pop(context);
          return false;
        }
      }

      return true;
    } catch (e) {
      debugPrint("L·ªói khi ki·ªÉm tra quy·ªÅn micro: $e");
      return false;
    }
  }

  /// üíæ Ki·ªÉm tra & xin quy·ªÅn ghi b·ªô nh·ªõ (Android 13 tr·ªü xu·ªëng)
  static Future<bool> ensureStoragePermission(BuildContext context) async {
    try {
      if (Platform.isAndroid) {
        final status = await Permission.storage.request();

        if (!status.isGranted) {
          await ShowNotification.showToast(
            context,
            'Kh√¥ng c√≥ quy·ªÅn truy c·∫≠p th∆∞ m·ª•c. Vui l√≤ng c·∫•p quy·ªÅn trong C√†i ƒë·∫∑t.',
          );
          return false;
        }
      }

      return true;
    } catch (e) {
      debugPrint("L·ªói khi ki·ªÉm tra quy·ªÅn b·ªô nh·ªõ: $e");
      return false;
    }
  }
}
